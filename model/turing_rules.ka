%var: 'k-plug' 1000
%var: 'k-read' 10
%var: 'k-write' 10

/* RULES */
/* tape */
/* Construciton */
'm-plug-to-prev' C(prev[./1], main{m}), C(next[./1], main{o/m}) @ 'k-plug'
'm-plug-to-next' C(next[./1], main{m}), C(prev[./1], main{o/m}) @ 'k-plug'

/* READ THE TAPE (from state to transisiton) */

'read-FALSE' C(main{m}, com[1], val{f}), H(com_tape[1], com_aut[2/4]),
S(next0[3], com[2/.]), T(prev[3], com[./4]) @ 'k-read'

'read-TRUE' C(main{m}, com[1], val{t}), H(com_tape[1], com_aut[2/4]),
S(next1[3], com[2/.]), T(prev[3], com[./4]) @ 'k-read'

'read-SEP' C(main{m}, com[1], val{s}), H(com_tape[1], com_aut[2/4]),
S(next2[3], com[2/.]), T(prev[3], com[./4]) @ 'k-read'

/* EXECUTE TRANSITION (from transisiton to state */
/* (unfortunatly it will be 6 times the right numbre of rules)*/
/* The idea here is to write to apply a transition, to do so,
	* 1) match the good kind of transitions
	* 2) write the new value in the tape
	* 3) move on the tape (if needed)
	* 4) go to the next state
*/
 
/* ################################################################################ */
/* 														PREV 1 																							  */
/* ################################################################################ */
/* Write FALSE */
'1-write-FALSE-left' C(prev[1], main{m}, com[2/.], val{#/f}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{l}),
S(prev1[4], com[./5]) @ 'k-write'
 
'1-write-FALSE-right' C(next[1], main{m}, com[2/.], val{#/f}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{r}),
S(prev1[4], com[./5]) @ 'k-write'

'1-write-FALSE-no-move' C(main{m}, com[2], val{#/f}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{n}),
S(prev1[4], com[./5]) @ 'k-write'

/* Write TRUE */
'1-write-TRUE-left' C(prev[1], main{m}, com[2/.], val{#/t}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{l}),
S(prev1[4], com[./5]) @ 'k-write'
 
'1-write-TRUE-right' C(next[1], main{m}, com[2/.], val{#/t}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{r}),
S(prev1[4], com[./5]) @ 'k-write'

'1-write-TRUE-no-move' C(main{m}, com[2], val{#/t}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{n}),
S(prev1[4], com[./5]) @ 'k-write'

/* Write SEP */
'1-write-SEP-left' C(prev[1], main{m}, com[2/.], val{#/s}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{l}),
S(prev1[4], com[./5]) @ 'k-write'
 
'1-write-SEP-right' C(next[1], main{m}, com[2/.], val{#/s}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{r}),
S(prev1[4], com[./5]) @ 'k-write'

'1-write-SEP-no-move' C(main{m}, com[2], val{#/s}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{n}),
S(prev1[4], com[./5]) @ 'k-write'


/* ################################################################################ */
/* 														PREV 2 																							  */
/* ################################################################################ */
/* Write FALSE */
'2-write-FALSE-left' C(prev[1], main{m}, com[2/.], val{#/f}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{l}),
S(prev2[4], com[./5]) @ 'k-write'
 
'2-write-FALSE-right' C(next[1], main{m}, com[2/.], val{#/f}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{r}),
S(prev2[4], com[./5]) @ 'k-write'

'2-write-FALSE-no-move' C(main{m}, com[2], val{#/f}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{n}),
S(prev2[4], com[./5]) @ 'k-write'

/* Write TRUE */
'2-write-TRUE-left' C(prev[1], main{m}, com[2/.], val{#/t}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{l}),
S(prev2[4], com[./5]) @ 'k-write'
 
'2-write-TRUE-right' C(next[1], main{m}, com[2/.], val{#/t}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{r}),
S(prev2[4], com[./5]) @ 'k-write'

'2-write-TRUE-no-move' C(main{m}, com[2], val{#/t}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{n}),
S(prev2[4], com[./5]) @ 'k-write'

/* Write SEP */
'2-write-SEP-left' C(prev[1], main{m}, com[2/.], val{#/s}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{l}),
S(prev2[4], com[./5]) @ 'k-write'
 
'2-write-SEP-right' C(next[1], main{m}, com[2/.], val{#/s}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{r}),
S(prev2[4], com[./5]) @ 'k-write'

'2-write-SEP-no-move' C(main{m}, com[2], val{#/s}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{n}),
S(prev2[4], com[./5]) @ 'k-write'

/* ################################################################################ */
/* 														PREV 3 																							  */
/* ################################################################################ */
/* Write FALSE */
'3-write-FALSE-left' C(prev[1], main{m}, com[2/.], val{#/f}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{l}),
S(prev3[4], com[./5]) @ 'k-write'
 
'3-write-FALSE-right' C(next[1], main{m}, com[2/.], val{#/f}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{r}),
S(prev3[4], com[./5]) @ 'k-write'

'3-write-FALSE-no-move' C(main{m}, com[2], val{#/f}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{n}),
S(prev3[4], com[./5]) @ 'k-write'

/* Write TRUE */
'3-write-TRUE-left' C(prev[1], main{m}, com[2/.], val{#/t}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{l}),
S(prev3[4], com[./5]) @ 'k-write'
 
'3-write-TRUE-right' C(next[1], main{m}, com[2/.], val{#/t}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{r}),
S(prev3[4], com[./5]) @ 'k-write'

'3-write-TRUE-no-move' C(main{m}, com[2], val{#/t}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{n}),
S(prev3[4], com[./5]) @ 'k-write'

/* Write SEP */
'3-write-SEP-left' C(prev[1], main{m}, com[2/.], val{#/s}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{l}),
S(prev3[4], com[./5]) @ 'k-write'
 
'3-write-SEP-right' C(next[1], main{m}, com[2/.], val{#/s}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{r}),
S(prev3[4], com[./5]) @ 'k-write'

'3-write-SEP-no-move' C(main{m}, com[2], val{#/s}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{n}),
S(prev3[4], com[./5]) @ 'k-write'


/* ################################################################################ */
/* 														PREV 4 																							  */
/* ################################################################################ */
/* Write FALSE */
'4-write-FALSE-left' C(prev[1], main{m}, com[2/.], val{#/f}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{l}),
S(prev4[4], com[./5]) @ 'k-write'
 
'4-write-FALSE-right' C(next[1], main{m}, com[2/.], val{#/f}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{r}),
S(prev4[4], com[./5]) @ 'k-write'

'4-write-FALSE-no-move' C(main{m}, com[2], val{#/f}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{n}),
S(prev4[4], com[./5]) @ 'k-write'

/* Write TRUE */
'4-write-TRUE-left' C(prev[1], main{m}, com[2/.], val{#/t}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{l}),
S(prev4[4], com[./5]) @ 'k-write'
 
'4-write-TRUE-right' C(next[1], main{m}, com[2/.], val{#/t}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{r}),
S(prev4[4], com[./5]) @ 'k-write'

'4-write-TRUE-no-move' C(main{m}, com[2], val{#/t}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{n}),
S(prev4[4], com[./5]) @ 'k-write'

/* Write SEP */
'4-write-SEP-left' C(prev[1], main{m}, com[2/.], val{#/s}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{l}),
S(prev4[4], com[./5]) @ 'k-write'
 
'4-write-SEP-right' C(next[1], main{m}, com[2/.], val{#/s}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{r}),
S(prev4[4], com[./5]) @ 'k-write'

'4-write-SEP-no-move' C(main{m}, com[2], val{#/s}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{n}),
S(prev4[4], com[./5]) @ 'k-write'

/* ################################################################################ */
/* 														PREV 5 																							  */
/* ################################################################################ */
/* Write FALSE */
'5-write-FALSE-left' C(prev[1], main{m}, com[2/.], val{#/f}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{l}),
S(prev5[4], com[./5]) @ 'k-write'
 
'5-write-FALSE-right' C(next[1], main{m}, com[2/.], val{#/f}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{r}),
S(prev5[4], com[./5]) @ 'k-write'

'5-write-FALSE-no-move' C(main{m}, com[2], val{#/f}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{n}),
S(prev5[4], com[./5]) @ 'k-write'

/* Write TRUE */
'5-write-TRUE-left' C(prev[1], main{m}, com[2/.], val{#/t}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{l}),
S(prev5[4], com[./5]) @ 'k-write'
 
'5-write-TRUE-right' C(next[1], main{m}, com[2/.], val{#/t}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{r}),
S(prev5[4], com[./5]) @ 'k-write'

'5-write-TRUE-no-move' C(main{m}, com[2], val{#/t}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{n}),
S(prev5[4], com[./5]) @ 'k-write'

/* Write SEP */
'5-write-SEP-left' C(prev[1], main{m}, com[2/.], val{#/s}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{l}),
S(prev5[4], com[./5]) @ 'k-write'
 
'5-write-SEP-right' C(next[1], main{m}, com[2/.], val{#/s}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{r}),
S(prev5[4], com[./5]) @ 'k-write'

'5-write-SEP-no-move' C(main{m}, com[2], val{#/s}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{n}),
S(prev5[4], com[./5]) @ 'k-write'


/* ################################################################################ */
/* 														PREV 6 																							  */
/* ################################################################################ */
/* Write FALSE */
'6-write-FALSE-left' C(prev[1], main{m}, com[2/.], val{#/f}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{l}),
S(prev6[4], com[./5]) @ 'k-write'
 
'6-write-FALSE-right' C(next[1], main{m}, com[2/.], val{#/f}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{r}),
S(prev6[4], com[./5]) @ 'k-write'

'6-write-FALSE-no-move' C(main{m}, com[2], val{#/f}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{f}, dep{n}),
S(prev6[4], com[./5]) @ 'k-write'

/* Write TRUE */
'6-write-TRUE-left' C(prev[1], main{m}, com[2/.], val{#/t}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{l}),
S(prev6[4], com[./5]) @ 'k-write'
 
'6-write-TRUE-right' C(next[1], main{m}, com[2/.], val{#/t}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{r}),
S(prev6[4], com[./5]) @ 'k-write'

'6-write-TRUE-no-move' C(main{m}, com[2], val{#/t}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{t}, dep{n}),
S(prev6[4], com[./5]) @ 'k-write'

/* Write SEP */
'6-write-SEP-left' C(prev[1], main{m}, com[2/.], val{#/s}), 
C(next[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{l}),
S(prev6[4], com[./5]) @ 'k-write'
 
'6-write-SEP-right' C(next[1], main{m}, com[2/.], val{#/s}), 
C(prev[1], main{m}, com[./6]), H(com_tape[2/6], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{r}),
S(prev6[4], com[./5]) @ 'k-write'

'6-write-SEP-no-move' C(main{m}, com[2], val{#/s}), 
H(com_tape[2], com_aut[3/5]), 
T(next[4], com[3/.], write{s}, dep{n}),
S(prev6[4], com[./5]) @ 'k-write'
